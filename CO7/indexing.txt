> use admin
switched to db admin
> show users
> use Employee
switched to db Employee
> show users
{
        "_id" : "Employee.Raichal",
        "userId" : UUID("b67718d3-e34e-4a37-bbbc-2c42c612fd2c"),
        "user" : "Raichal",
        "db" : "Employee",
        "roles" : [
                {
                        "role" : "readWrite",
                        "db" : "Employee"
                }
        ],
        "mechanisms" : [
                "SCRAM-SHA-1",
                "SCRAM-SHA-256"
        ]
}
> use college
switched to db college
> db.createCollection("student")
{ "ok" : 1 }
> use Employee
switched to db Employee
> db.createCollection("college")
{ "ok" : 1 }
> db.college.insert({RegNo:2101,Name:"Raichal",Mark:[{cs:95,maths:88,phy:75,chem:85,eng:91}]})
WriteResult({ "nInserted" : 1 })
> db.college.insert({RegNo:2102,Name:"Abina",Mark:[{cs:99,maths:82,phy:76,chem:95,eng:91}]})
WriteResult({ "nInserted" : 1 })
> db.college.insert({RegNo:2103,Name:"Riya",Mark:[{cs:100,maths:85,phy:71,chem:91,eng:94}]})
WriteResult({ "nInserted" : 1 })

> db.college.getIndexes()
[ { "v" : 2, "key" : { "_id" : 1 }, "name" : "_id_" } ]

> db.college.createIndex({RegNo:1})
{
        "numIndexesBefore" : 1,
        "numIndexesAfter" : 2,
        "createdCollectionAutomatically" : false,
        "ok" : 1
}
> db.college.getIndexes()
[
        {
                "v" : 2,
                "key" : {
                        "_id" : 1
                },
                "name" : "_id_"
        },
        {
                "v" : 2,
                "key" : {
                        "RegNo" : 1
                },
                "name" : "RegNo_1"
        }
]
> db.college.dropIndex({RegNo:1})
{ "nIndexesWas" : 2, "ok" : 1 }

> db.college.getIndexes()
[ { "v" : 2, "key" : { "_id" : 1 }, "name" : "_id_" } ]

> db.college.createIndex({RegNo:1,name:1})
{
        "numIndexesBefore" : 1,
        "numIndexesAfter" : 2,
        "createdCollectionAutomatically" : false,
        "ok" : 1
}

> db.college.getIndexes()
[
        {
                "v" : 2,
                "key" : {
                        "_id" : 1
                },
                "name" : "_id_"
        },
        {
                "v" : 2,
                "key" : {
                        "RegNo" : 1,
                        "name" : 1
                },
                "name" : "RegNo_1_name_1"
        }
]
]
> db.college.createIndex({"mark.cs":1})
{
        "numIndexesBefore" : 2,
        "numIndexesAfter" : 3,
        "createdCollectionAutomatically" : false,
        "ok" : 1
}
> db.college.getIndexes()
[
        {
                "v" : 2,
                "key" : {
                        "_id" : 1
                },
                "name" : "_id_"
        },
        {
                "v" : 2,
                "key" : {
                        "RegNo" : 1,
                        "name" : 1
                },
                "name" : "RegNo_1_name_1"
        },
        {
                "v" : 2,
                "key" : {
                        "mark.cs" : 1
                },
                "name" : "mark.cs_1"
        }

// Text Index

> db.createCollection("comment")
{ "ok" : 1 }

> db.comment.insert({name:"Anu",post:"hai"})
WriteResult({ "nInserted" : 1 })

> db.comment.insert({name:"Abina",post:"hello"})
WriteResult({ "nInserted" : 1 })
> db.comment.insert({name:"Sona",post:"hola"})
WriteResult({ "nInserted" : 1 })
> db.comment.createIndex({post:"text"})
{
        "numIndexesBefore" : 1,
        "numIndexesAfter" : 2,
        "createdCollectionAutomatically" : false,
        "ok" : 1
}

> db.comment.getIndexes()
[
        {
                "v" : 2,
                "key" : {
                        "_id" : 1
                },
                "name" : "_id_"
        },
        {
                "v" : 2,
                "key" : {
                        "_fts" : "text",
                        "_ftsx" : 1
                },
                "name" : "post_text",
                "weights" : {
                        "post" : 1
                },
                "default_language" : "english",
                "language_override" : "language",
                "textIndexVersion" : 3
        }
]

> db.comment.find({$text:{$search:"\"hai\""}})
{ "_id" : ObjectId("62a0733f42cba70d8eac4e68"), "name" : "Anu", "post" : "hai" }